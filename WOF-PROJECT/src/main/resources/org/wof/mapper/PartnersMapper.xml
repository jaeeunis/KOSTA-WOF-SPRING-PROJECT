<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.wof.mapper.PartnersMapper">

	<!-- 파트너스 찾기클릭시(파트너스 전체 리스트 불러오기) /*+INDEX_DESC(MEMBER SYS_C004099)*/ -->
	<select id="partnersList" resultType="org.wof.domain.PartnersVO">
		<![CDATA[
		select MEMBER_NO, REAL_NAME, substr(BIRTHDAY,1,2) as BIRTHDAY, PREFERED_AREA, 
		CAREER, SKILL, HASHTAG, AVAILABLE_DATE, PROFILE, target_member
		
		from (
		select 
		rownum rn, m.MEMBER_NO, m.REAL_NAME, p.BIRTHDAY, p.PREFERED_AREA, 
		p.CAREER, p.SKILL, p.HASHTAG, p.AVAILABLE_DATE, p.PROFILE, f.target_member
		from
		member m
        JOIN partners p
        on m.MEMBER_NO = p.MEMBER_NO
        left outer join followpartners f
        on p.member_no = f.target_member
        and f.source_member = #{member_no}
        where rownum <= #{standard.pageNum} * #{standard.amount}
        order by m.LOGIN_DATE desc
        )
        
        where rn > (#{standard.pageNum} -1) * #{standard.amount}
        
		]]>
	</select>
	
	<select id="getTotalCount" resultType="int">
		select count(*)
		from member m
        JOIN partners p
        on m.MEMBER_NO = p.MEMBER_NO
	</select>
	
	<!-- 관심 파트너스 체크 -->
	<select id="followCheck" parameterType="org.wof.domain.FollowPartnersVO" resultType="String">
		select count(*) from FOLLOWPARTNERS where SOURCE_MEMBER=#{source_member} and TARGET_MEMBER=#{target_member}
	</select>
	
	<!-- 관심 파트너스 입력 -->
	<insert id="followYes" parameterType="org.wof.domain.FollowPartnersVO">
		insert into FOLLOWPARTNERS (FOLLOWPARTNERS_NO, SOURCE_MEMBER, TARGET_MEMBER, FOLLOWING_DATE)
		values ('fpr'||follow_partner_seq.nextval, #{source_member}, #{target_member}, sysdate)
	</insert>
	
	<!-- 관심 파트너스 삭제 -->
	<delete id="followNo" parameterType="org.wof.domain.FollowPartnersVO">
		delete from FOLLOWPARTNERS where SOURCE_MEMBER=#{source_member} and TARGET_MEMBER=#{target_member}
	</delete>
	
	<!-- 관심파트너스 리스트 lpad 사용해보기 parameterType="org.wof.domain.PartnersVO" -->
	<select id="followList" resultType="org.wof.domain.PartnersVO">
		<![CDATA[
		select MEMBER_NO, substr(BIRTHDAY,1,2) as BIRTHDAY, PREFERED_AREA, CAREER, SKILL, HASHTAG
		from(
		select 
		rownum rn, p.MEMBER_NO, p.BIRTHDAY, p.PREFERED_AREA, p.CAREER, p.SKILL, p.HASHTAG
		from FOLLOWPARTNERS f, PARTNERS p, member m
		where f.TARGET_MEMBER = p.MEMBER_NO
        and p.member_no = m.member_no
		and f.SOURCE_MEMBER = #{member_no}
		and rownum <= #{standard.pageNum} * #{standard.amount}
        order by m.LOGIN_DATE desc
		)
		where rn > (#{standard.pageNum} -1) * #{standard.amount}
		]]>
	</select>
	
	<!-- 로그인한 아이디의 관심파트너스 토탈 -->
	<select id="followCount" resultType="int">
		<![CDATA[
			select 
			count(*)
			from FOLLOWPARTNERS f, PARTNERS p, member m
			where f.TARGET_MEMBER = p.MEMBER_NO
	        and p.member_no = m.member_no
			and f.SOURCE_MEMBER = #{member_no}
		]]>
	</select>
	
	<!-- 로그인한 클라이언트의 지역 가저오기 -->
	<select id="clientAddress" resultType="String">
		select c.ADDRESS1
		from member m left outer join client c
		on m.member_no = c.member_no
		where m.member_no = #{member_no}
	</select>
	
	<!-- 로그인한 클라이언트가 올린 프로젝트 스킬 가저오기 -->
	<select id="projectSkill" resultType="String">
		select proj_reqr_skill
		from project
		where member_no = #{member_no}
	</select>
	
	<!-- 추천 파트너스 리스트 -->
	<select id="recommend" parameterType="map" resultType="org.wof.domain.PartnersVO">
		select 
		MEMBER_NO,
		substr(BIRTHDAY,1,2) as BIRTHDAY,
		CAREER,
		SKILL,
		PREFERED_AREA,
		HASHTAG,
		AVAILABLE_DATE,
		PROFILE
		
		from partners
		
		where PREFERED_AREA like '%'||#{address}||'%' or
		<foreach collection="skillList" item="skillList" separator=" or ">
		skill like '%'||#{skillList}||'%'
		</foreach>
		
	</select>
	
</mapper>